# Generated by Django 5.2.4 on 2025-08-06 09:28

import apps.users.manager
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Interest',
                'verbose_name_plural': 'Interests',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone number')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('username', models.CharField(max_length=30, verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Last name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Is Confirmed')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('reason_delete_choices', models.CharField(blank=True, choices=[('I_CHANGED_MY_MIND', 'I Changed My Mind'), ('INFORMATION_WAS_ENTERED_INCORRECTLY', 'Information Was Entered Incorrectly'), ('I_WAS_FORCED', 'I Was Forced'), ('I_PREFER_NOT_TO_SAY', 'I Prefer Not To Say'), ('OTHER', 'Other')], null=True, verbose_name='Reason Delete Choice')),
                ('reason_delete_str', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reason Delete String')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('interests', models.ManyToManyField(blank=True, to='users.interest')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', apps.users.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User course',
                'verbose_name_plural': 'User courses',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='courses_purchased',
            field=models.ManyToManyField(blank=True, related_name='purchased_by', through='users.UserCourse', to='courses.course'),
        ),
        migrations.CreateModel(
            name='UserWebinar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.webinar', verbose_name='Webinar')),
            ],
            options={
                'verbose_name': 'User webinar',
                'verbose_name_plural': 'User webinars',
                'unique_together': {('user', 'webinar')},
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='webinars_purchased',
            field=models.ManyToManyField(blank=True, related_name='purchased_by', through='users.UserWebinar', to='courses.webinar'),
        ),
        migrations.AddConstraint(
            model_name='customuser',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('username',), name='unique_active_username'),
        ),
    ]
